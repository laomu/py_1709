print("一、加密解密操作")
print("什么东西为加密？")
print("1.将一个正常的数据，按照一定的算法操作，得到一个混乱的数据")
print("此时~别人就不能通过这样混乱的数据解读你要表述的信息了.")
print("如：1234 加密算法(1+1/2+2/3+3/4+4)->2468")
print("明文：原始的数据1234；密文：加密之后的数据2468")

print("什么东西是解密？")
print("2.按照加密时指定的密码算法，按照逆向算法，将密文通过运算")
print("得到明文，得到正确数据的过程")
print("#"*60)
print("二、现在的加密和解密")
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
print("1. 根据加密是否可逆，分为单向加密和双向加密")
print("单向加密：通过指定的算法，可以将明文->算法->密文")
print("这样的加密算法不可逆，密文-/->明文")
print("奇怪的问题：为什么会有一种加密方式，只能加密不能解密呢？")
print("在某些特殊的使用场景中，我们要保护数据，只能让数据加密，不允许解密")
print("用户注册时的登录密码：在注册时进行加密。不允许通过解密查看明文密码")
print("*************************")
print("双向加密：通过指定的算法，明文-->密文")
print("通过制定的算法：密文-->明文")
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
print("在双向加密算法中：对称加密 | 非对称加密")
print("对称加密算法：加密和解密，使用的是同一套密钥(加密算法)")
print("明文-->加密算法A-->密文")
print("密文-->加密算法A-->明文")
print("非对称加密算法：加密和解密，使用的不同的密钥")
print("明文-->加密算法A-->密文")
print("密文-->加密算法B-->明文")
print("#"*60)
print("学习目标：单向加密算法")
print("数字指纹~单向散列加密算法~MD5")
print("安全的hash加密算法：SHA")
print("~~~~~~~~~~~~~~~~~~~~~~~~~~")
# 引入需要的模块
import hashlib
# 要查看模块中都有那些操作
# 使用这些操作来完成项目中的功能！

# 加密步骤：项目开发的过程中，将加密步骤封装成一个函数进行使用
# 1.确定目标字符串
passwd = "123123"
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 2.进行md5加密操作：被加密的字符串，要进行encode编码
# 单向散列加密算法
_p1 = hashlib.md5(passwd.encode("utf-8"))
# 3.通过盐值进行混淆
_p1.update("laomu".encode("utf-8"))
# 4.得到加密后的密文数据
_p2 = _p1.hexdigest()
print("明文数据：%s" % passwd)
print("密文数据：%s" % _p2)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 1.通过sha512加密算法进行加密：单向安全HASH加密算法
_sha = hashlib.sha512(passwd.encode("utf-8"))
# 2.添加盐值进行混淆
_sha.update("192.168.10.110".encode("utf-8"))
# 3.得到加密的数据
_s = _sha.hexdigest()
print("SHA密文数据：%s" % _s)