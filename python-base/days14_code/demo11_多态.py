# 定义一个动物
class Animal:

	def run(self):
		print("动物在前进中.....")

# 飞禽
class Birds(Animal):

	def run(self):
		print("飞禽在飞行......")

# 走兽
class Beast(Animal):

	def run(self):
		print("在地面上奔跑......")


# 其他
class Bat(Animal):
	pass


bd = Birds()# 飞禽
bd.run()

bt = Beast()# 走兽
bt.run()

bat = Bat()# 未知动物
bat.run()

"""
python3中
多继承：实在软件项目设计的时候，就已经开始确定每个类型的特征
	一个类型可能会出现的各种场景设计完成时，就可能有多继承的
	情况出现了，设计好了某个类型在不同的方法中执行不同的函数

	在软件设计时已经确定了某个类型的对象，会有各种不同的操作
	【设计时多态】
方法重写：子类中重写了继承自父类的方法，在程序运行过程中，根据
	子类是否重写父类的方法决定是执行父类的方法/子类的方法

	在程序运行过程中才能确定运行的结果
	【运行时多态】

多态：多种状态
	【多继承：人-父亲~儿子~丈夫】
	【方法重写：动物-行走-飞禽~飞行-走兽~奔跑】

"""



