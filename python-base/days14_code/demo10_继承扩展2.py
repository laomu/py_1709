# 方法重写，也称为方法覆盖
# 在两个类型中，子类中，重新定义父类中已经存在的方法，称为方法重写
class Person:

	def eat(self):
		print("人吃饭了。。。。。")

class Man(Person):
	def eat(self):
		print("男人们，~开饭了...")

man = Man()
man.eat()

# 1. 如果Man继承了Person，表示Man类型中已经继承了Person类型的
# eat()方法，表示的是Man中已经有了继承的eat()可以执行
# 2. 如果子类中，重新将从父类中继承的方法进行了定义和开发，就是Man
# 类型中重新编写了eat()函数，称为Man重写了父类的eat()方法

# 目的：在程序运行过程中，如果子类没有重写父类的方法，直接运行
# 父类的方法；如果子类重写了父类的方法，就运行子类重写过的方法
# 好处：体现的是~程序运行时多态！